include, inc/update.hsi
include, inc/util.hsi
include, inc/event.hsi
include, inc/stats.hsi
include, inc/encounter.hsi
include, inc/menu.hsi
include, inc/map.hsi
include, inc/pins.hsi
include, inc/sineEffect.hsi
include, inc/thirdparty.hsi
include, inc/write.hsi
include, inc/text.hsi

defineConstant, begin
	#game states
	0,	state:suspend
	1,	state:resume
	2,	state:setkey
	3,	state:encounter

	#slice lookups
	200,	sli:usable
	201,	sli:walkabout
	202,	sli:chars
	203,	sli:pinBag
	204,	sli:battleback
	205,	sli:overlay

	0,	back:tick
	1,	back:scrollxrate
	2,	back:scrollyrate
	3,	back:rate
	4,	back:amplitude
	5,	back:frequency
	6,	back:mode
	7,	back:compression
	8,	back:scrollx
	9,	back:scrolly

	

	#dedicatedStrings
	0,	strng:PlayerName
	1,	strng:RoseName
	2,	strng:KatName
	3,	strng:EnemyName
	4,	strng:deadname
	30,	strng:life
	31,	strng:psi
	32,	strng:mind
	33,	strng:speed
	34,	strng:empathy
	35,	strng:alignment
	40,	strng:atk1
	41,	strng:atk2
	42,	strng:stat
	43,	strng:atr

	#buttons
	0,	b:u
	1,	b:d
	2,	b:l
	3,	b:r
	4,	b:a
	5,	b:b
	6,	b:x
	7,	b:y
	8,	b:any

	0,	type:null
	1,	type:logic
	2,	type:anger
	3,	type:slut
	4,	type:selfish
	5,	type:caring
	6,	type:scared
	7,	type:sad

	1,	liked
	2,	disliked

	1,	weak
	2,	strong

	0,	encounter:won
	1,	encounter:lost
	2,	encounter:enraged
	3,	encounter:peaceful
	4,	encounter:ran

	5,	encounter:null
	6,	encounter:choose
	7,	encounter:talk
	8,	encounter:fight
	9,	encounter:item
	10,	encounter:skill
	11,	encounter:run
	12,	encounter:target
	13,	encounter:talked
	14,	encounter:between
	15, encounter:defend
	16,	encounter:animate

	0,	turn:rose
	1,	turn:kat
	2,	turn:enemy

	0,	char:rose
	1,	char:kat
	2,	char:enemy

	0,	enemy:dummy

	0,	target:party
	1,	target:all
	2,	target:enemy

	0,	pin:dummy
	1,	pin:heart
	2,	pin:calm
	3,	pin:read
	4,	pin:flame
	5,	pin:water
	6,	pin:shock
	7,	pin:earth
	8,	pin:addFlame
	9,	pin:addWater
	10,	pin:addShock
	11,	pin:addEarth
	12,	pin:life
	13,	pin:psi
	14,	pin:mind
	15,	pin:speed
	16,	pin:empathy
	17,	pin:flameAtr
	18,	pin:waterAtr
	19,	pin:shockAtr
	20,	pin:earthAtr


	0,	stat:currentlife
	1,	stat:life
	2,	stat:psi
	3,	stat:mind
	4,	stat:speed
	5,	stat:empathy
	5,	stat:will
	6,	stat:alignment
	6,	stat:personality
	7,	stat:atr
	8,	stat:mood
	9,	stat:defending

	10,	stat:lvled

	1,	stat:lvledUp
	2,	stat:capped

	0,	atr:none
	1,	atr:flame
	2,	atr:water
	3,	atr:shock
	4,	atr:earth

	0,	gain:damage
	1,	gain:attack
	2,	gain:speed
	3,	gain:failTalk
	4,	gain:talked
	5,	gain:battled
	6,	gain:defend

	1,	ani:enemyAttack
	2,	ani:playerAttack
	3,	ani:flame
	4,	ani:water
	5,	ani:shock
	6,	ani:earth
	7,	ani:addFlame
	8,	ani:addWater
	9,	ani:addShock
	10,	ani:addEarth
	11,	ani:heart

	0,	slot:atk1
	1,	slot:atk2
	2,	slot:stat
	3,	slot:atr
	4,	slot:none

	4,	char:sprite

	0,	pin:id
	1,	pin:exp
	2,	pin:lvl
	3,	pin:tempExp

	0,	bag:skill
	1,	bag:stat
	2,	bag:atr
	3,	bag:all
	
	
	0, diff:normal
	1, diff:easy
	2, diff:hard
end

globalVariable, begin
	#keyboard variables
	0,	k:u
	1,	k:d
	2,	k:l
	3,	k:r
	4,	k:a
	5,	k:b
	6,	k:x
	7,	k:y

	#gamepad variables
	8,	p:a
	9,	p:b
	10,	p:x
	11,	p:y


	12,	game:lvlCap
	13,	game:diff

	14,	maxLvl:rose
	15,	maxLvl:Kat

	16,	sel:ActionRose
	17,	sel:ActionKat
	18,	sel:PinRose
	19,	sel:PinKat

	20,	game:font
	21,	game:txtspeed
	22,	game:tick
	23, game:state
	24,	game:boxStyle
end

#default scripts
plotscript, onKey, begin
	if (keyIsPressed(key:r)&&keyIsPressed(key:shift)) then(
		resetGame()
	)
end

plotscript, newGame, begin

	init()
	mainLoop()

	subscript, init, begin
		variable (sli)
		suspendPlayer()
		resetKeys()

		#initChars()

		$30="Life"
		$31="Psi"
		$32="Mind"
		$33="Speed"
		$34="Empath"
		$35="Align"
		$40="Skill1"
		$41="Skill2"
		$42="Stat+ "
		$43="Typing"

		game:lvlCap := 10
		
		game:state := state:resume

		game:txtspeed := 2

		sel:ActionRose := 1
		sel:ActionKat := 1
		sel:PinRose := 1
		sel:PinKat := 1

		setMusicVolume(0)
	end
end

plotscript, loadGame, begin

	init()
	mainLoop()

	subscript, init, begin
		game:state := state:resume
	end
end

plotscript, autorun, begin
	variable(sli, i)
	if (lookupslice(sli:chars)==0) then (
		initChars
		createCharWalk (getCharSprite(char:Rose), char:Rose)
		if (heroByRank(1) <> -1) then (
			createCharWalk (getCharSprite(char:Kat), char:Kat)
		)
	)

	switch (currentMap) do (
		case (1) do (
			for(i, 0, 4) do (	
				if (heroByRank(i) <>-1) then (
					sli := lastChild(getHeroSlice(i))
					setSliceVisible (sli, false)
				)
			)
		)
		else (
			for(i, 0, 4) do (	
				if (heroByRank(i) <>-1) then (
					sli := lastChild(getHeroSlice(i))
					setSliceVisible (sli, true)
				)
			)
		)
	)

	switch (currentMap) do (
		case (0) do (loadTrees(2))
		case (1) do (
			sli := lookup slice(sl:map layer0)
			setSliceVelocity (sli, 2, 1)
		)
	)
	#cases where overlay should not be visible
	switch(currentMap) do (
		case (1) do ()
		else (
			if (lookupSlice(sli:overlay)==false) then (
				sli := loadBackdropSprite(17)
				setSliceLookup(sli, sli:overlay)
			)
			sliceToFront(sli)
		)
	)
	

	subscript, createCharWalk, set, who, begin
		sli := loadBorderSprite(set)
		setSpriteFrame(sli, 9)
		set parent(sli, getheroSlice(who))
		setSliceLookup(sli, sli:walkabout)
		setSliceVisible(getheroSprite(who), false)
	end
end