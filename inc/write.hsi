#scripted text box that works like pokemon
script, write, textbox=0, width=32, height=4, type=true, string=10, showbox=true, freeAtEnd=true, begin
	variable (sli, icon, parent, i, offset, box, lineBreak, skip, j, firstLineChar)
	init()
	i := 1

	while (i <= stringLength(string)) do (
		#check to see if the text is out of bounds
		if (lineBreak) then (
			lineBreak := false
			#increment y offset of text
			offset += 1
			firstLineChar := i
			#when text box is filled, wait for key then scroll up
			if (offset,mod,(height/10)==0) then (
				#icon := loadSmallEnemySprite(0)
				#setParent(icon, box)
				#realignSlice(icon, edge:right, edge:bottom, edge:right, edge:bottom)
				while (true) do (
					#if (game:tick,mod,6=1) then (
						#setSpriteFrame(icon, getSpriteFrame(icon,mod,2))
					#)
					if (newpresskey(b:a)) then (specwait, break)
					specwait
				)
				skip := false
				
				#freeSlice(icon)
				move slice by (parent, 0, height*-1 + 10, 2)
				specWait(1)
			)
			addLine()
		)
		if (asciiFromString(string, i)==32 && findNextSpace(i) -- firstLineChar >= width/8) then (
			lineBreak := true
		) else (appendAscii(20, asciiFromString(10, i)))

		setSliceText(sli, 20)
		if (type && game:txtSpeed > 0) then (
			for (j, 0, game:txtSpeed) do (
				if (newpressKey(b:a)) then (
					specwait()
					skip := true
				)
				if (skip == false) then (
					specwait()
				)
			)
		)
		i += 1
	)

	if (freeAtEnd) then (
		specwait
		while (newpresskey(b:a)==false) do (
			specwait
		)
		freeSlice(box)
	) else (return(box))

	subscript, init, begin
		width := width * 8
		height := height * 10
		if (showBox) then (
			box := createRect(width+12, height+12, game:boxStyle)
			setPadding(box,4)
			setRectTrans(box, trans:blend)
			setRectOpacity(box, 80)
		) else (
			box := createContainer(width, height)
		)
		setSliceClipping(box, true)
		put slice(box, 0, -28)
		realignSlice(box, edge:center, edge:bottom, edge:center, edge:bottom)
		parent := createContainer()
		setParent (parent, box)
		getText(textbox, string)
		expandString(string)
		#capitalize()
		addLine()
	end
	subscript, addLine, begin
		sli := createText()
		setParent(sli, parent)
		putSlice(sli, 0, offset*10)
		setOutline(sli, true)
		ClearString(20)
		setSliceText(sli, 20)
	end
end

script, capitalize, string=10, begin
	variable(i, pos, char)
	char := asciiFromString (string, 1)
	if (char >=97 && char <= 122) then (
		replaceChar(string, 1, char -- 32)
	)
	for (i, 2, stringLength(string)--2) do (
		char := asciiFromString (string, i)
		if (char == 46 || char == 33 || char == 63) then (
			char := asciiFromString (string, i+2)
			if (char >=97 && char <= 122) then (
				replaceChar(string, i+2, char -- 32)
			)
		)
	)
end

script, findNextSpace, start=1, string=10, begin
	variable (i)
	for (i, start+1, stringLength(string)) do (
		if (asciiFromString(string, i)==32) then (
			exitReturning (i--1)
		)
	)
end
