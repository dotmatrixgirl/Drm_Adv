script, initChar, who, begin
	variable (sli, i)
	sli := createContainer()
	setParent(sli, lookupslice(sli:chars))
	setSliceClipping(sli)
	resizeExtra(sli, 16)

	switch (who) do (
		case (hero:rose) do (
			setExtra(sli, stat:personality, 50)

			setExtra(sli, exp:life, 20^2)
			setExtra(sli, exp:psi, 5^2)
			setExtra(sli, exp:mind, 3^2)
			setExtra(sli, exp:speed, 6^2)
			setExtra(sli, stat:empathy, 5)

			setparent(loadBorderSprite(2), sli)

			setParent(initpin(pin:heart), sli)
			setParent(initpin(pin:dummy), sli)
		)
		case (hero:kat) do (
			setExtra(sli, stat:personality, 50)

			setExtra(sli, exp:life, 30^2)
			setExtra(sli, exp:psi, 3^2)
			setExtra(sli, exp:mind, 5^2)
			setExtra(sli, exp:speed, 4^2)
			setExtra(sli, stat:empathy, 7)

			setparent(loadBorderSprite(2), sli)

			setParent(initpin(pin:flame), sli)
			setParent(initpin(pin:dummy), sli)
		)
	)

	for (i, stat:life, stat:empathy) do (
		setLvl(who, i)
	)
end

script, getStat, who, which, begin
	variable (sli)
	sli := lookupslice(sli:chars)
	sli := sliceChild(sli, who)
	return (getExtra(sli, which))
end

script, setStat, who, which, value, begin
	variable(sli)
	sli := lookupslice(sli:chars)
	sli := sliceChild(sli, who)
	return (setExtra(sli, which, value))
end

script, setLvl, who, which, begin
	variable(exp, lvl, origLvl)

	origLvl := getStat(who, which)
	exp := getStat(who, which+6)
	lvl := sqrt (exp)

	setStat(who, which, lvl)
end

script, getStatValue, which, lvl, begin
	if (which == stat:life) then (
		return((lvl*3)^3)
	)else (
		return((lvl*2)^2)
	)
end

script, initEnemy, who, begin
	variable (sli)
	sli := createContainer()
	resizeExtra(sli, 16)

	switch (who) do (
		case (enemy:dummy) do (
			setExtra(sli, stat:life, 1)
			setExtra(sli, stat:psi, 1)
			setExtra(sli, stat:mind, 1)
			setExtra(sli, stat:speed, 1)
			setExtra(sli, stat:empathy, 1)
			setExtra(sli, stat:personality, type:logic)

			setParent(initpin(pin:flame, 1), sli)
			setParent(initpin(pin:flame, 1), sli)

			setparent(loadBorderSprite(2), sli)
		)
	)
	return (sli)
end

script, initpin, which, lvl=1, begin
	variable(sli)
	sli := createContainer()

	setExtra(sli, pin:ID, which)
	setExtra(sli, pin:level, lvl)

	return(sli)
end

script, getPinId, who, slot, begin
	variable (sli)
	sli :=	sliceChild(sliceChild (lookupslice(sli:chars), who), slot+1)
	return (getExtra(sli, pin:ID))
end

script, getPinLvl, who, slot, begin
	variable (sli)
	sli :=	sliceChild(sliceChild (lookupslice(sli:chars), who), slot+1)
	return (getExtra(sli, pin:level))
end

script, getPinName, which, begin
	switch (which) do (
		case (pin:heart) do ($11="Heart")
		case (pin:calm) do ($11="Calm")
		case (pin:read) do ($11="Read")
		case (pin:flame) do ($11="Flame")
		case (pin:water) do ($11="Water")
		case (pin:shock) do ($11="Shock")
		case (pin:earth) do ($11="Earth")
		case (pin:life) do ($11="Life+")
		case (pin:mind) do ($11="Mind+")
		case (pin:psi) do ($11="Psi+")
		case (pin:speed) do ($11="Speed+")
		case (pin:empathy) do ($11="Empathy+")
	)
end